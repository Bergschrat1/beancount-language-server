name: CI_CD
on:
  pull_request:
  push:
    tags:
      - "v*"
    paths-ignore:
      - "**/CHANGELOG.md"
      - "**/package.json"
      - "**/package-lock.json"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
    branches:
      - master
      - develop
  workflow_dispatch:

jobs:
  pre_run:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@ad6cb1b847ffb509a69b745b6ee2f1d14dfe14b8
        with:
          access_token: ${{ github.token }}

  audit:
    name: Audit and format
    runs-on: ubuntu-latest
    needs: pre_run
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: ~/.cargo/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: pre_run
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: llvm-tools-preview
          override: true

      - name: Cache cargo
        uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Unit Tests
        env:
          RUSTFLAGS: "-Zinstrument-coverage"
          LLVM_PROFILE_FILE: "clarity-lsp-%p-%m.profraw"
        run: cargo build && cargo test

  dist:
    name: Build distributions
    runs-on: ${{ matrix.os }}
    needs: pre_run
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x64
            target: x86_64-unknown-linux-gnu
            linker_package:
            cc: ""
          - os: windows-latest
            platform: windows-x64
            target: x86_64-pc-windows-msvc
            linker_package:
            cc: ""
          - os: macos-latest
            platform: macos-x64
            target: x86_64-apple-darwin
            linker_package:
            cc: ""

    steps:
      - name: Configure git to use LF (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/${{ matrix.target }}/release/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Compress artifact (Not Windows)
        if: matrix.os != 'windows-latest'
        run: zip --junk-paths ${{ matrix.platform }} ./target/${{ matrix.target }}/release/beancount-language-server

      - name: Compress artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path ./target/${{ matrix.target }}/release/beancount-language-server.exe -DestinationPath ${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: beancount-language-server-${{ matrix.platform }}
          path: ${{ matrix.platform }}.zip

      - name: Unit Tests
        run: cargo test --release --locked --target ${{ matrix.target }}

      - name: Upload artifact to GH release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.platform }}.zip
          asset_name: beancount-language-server-${{ matrix.platform }}.zip
          tag: ${{ github.ref }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs:
      - audit
      - dist
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Necessary for Semantic Release
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SEMANTIC_RELEASE_PACKAGE: ${{ github.event.repository.name }}
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
